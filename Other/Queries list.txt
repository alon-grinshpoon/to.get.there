
# show sp by ID (show its details, reviews list, ranks list)
example:
http://django-togetthereserver.rhcloud.com/ToGetThere/android/sp/1/



# get all reviews of curtain SP
example:
http://django-togetthereserver.rhcloud.com/ToGetThere/android/sp/1/reviews/




# get details of curtain user
example:
http://django-togetthereserver.rhcloud.com/ToGetThere/android/user/1/



# add a new SP
**POST** request with a JSON body
the body should have the following json format (order doesn't matter):
{"sp_name": "test",
"address": "test_address",
"longitude": "3.2",
"latitude": "2.2",
"phone": "03-7511034",
"discount": "5",
"category": [medical|restaurants|shopping|public_services|transportation|help]
"website": "website",
"toilets": "true",
"elevator": "true",
"entrance": "false",
"facilities": "false",
"parking": "true",
"toilets_text": "toilets_text",
"elevator_text": "elevator_text",
"entrance_text": "entrance_text",
"facilities_text": "facilities_text",
"parking_text": "parking_text"}

to

http://django-togetthereserver.rhcloud.com/ToGetThere/android/sp/add/

*** If SP with this name already exist it will not be added and you will get an empty Json response
else you will be redirected to the response given by 
http://django-togetthereserver.rhcloud.com/ToGetThere/android/sp/<newliy created sp>/
with the newly created sp



# rank an SP with score between 1-5, with user ID, and SP id:
SP id and User id must exist- if they dont you will get a 404 http response
example:
http://django-togetthereserver.rhcloud.com/ToGetThere/android/ranksp/1/score/5/user/1
http://django-togetthereserver.rhcloud.com/ToGetThere/android/ranksp/<sp_id>/score/5<rank>/user/<user_id- not facebook id>


# add a review to a curtain SP from curtain user
# ex: /ToGetThere/android/addreview/
**POST** request with a JSON body:
{"sp": "1",
"user": "2",
"title": "a new test review",
"content": "the test review content"}


# add like to a curtain review from curtain user
if there is already like from that user nothing wil change
# ex: /ToGetThere/android/addLike/
**POST** request with a JSON body:
{"user": "1",
"review": "6"}
will return an http response of the sp which had the review:
http://django-togetthereserver.rhcloud.com/ToGetThere/android/sp/<sp_id>/


# register a new user
# ex: http://django-togetthereserver.rhcloud.com/ToGetThere/android/adduser/
**POST** request with a JSON body:
{"facebook_id": "4331",
"first_name": "fn",
"last_name": "ln",
"email": "2323@gmail.com",
"birthday": "YYYY-MM-DD",
"phone": "fn",
"isVolunteering": "true/false/True/False"}
if user exist returns http response like in:
http://django-togetthereserver.rhcloud.com/ToGetThere/android/user/<newUSerId>/
else returns http 400 response - User already exist

# remove like of a curtain review from curtain user
# ex: /ToGetThere/android/removeLike/
**POST** request with a JSON body:
{"user": "1",
"review": "6"}
will return an http 200 response if the like was deleted successfully
if no like was found will return http 404

# remove review 
# ex: /ToGetThere/android/removeLike/
**POST** request with a JSON body:
{"review_id": "6"}
will return an http 200 response if the review was deleted successfully
if no review was found will return http 404


# edit the details of a curtain User
**POST** request with a JSON body, the body is key-value of the fields to change:
{"name" : "new name"}
possible fields are:
      facebook_id
      first_name
      last_name
      full_name
      email
      birthday
      level
      phone
      points
      isVolunteering
      wasAskedToVolunteer
# ex: /ToGetThere/android/editprofile/1/
will return the new user profile in Json


# edit the details of a curtain SP
**POST** request with a JSON body, the body is key-value of the fields to change:
{"name" : "new name"}
possible fields are:
      sp_name
      address
      category
      longitude
      latitude
      phone
      is_verified
      discount
      website
      toilets
      elevator
      entrance
      facilities
      toilets_text
      parking_text
      elevator_text
      entrance_text
      facilities_text
# ex: /ToGetThere/android/sp/1/edit/
will return the new sp in Json

#edit a curtain review
**POST** request with a JSON body, the body is key-value of the fields to change:
{"title" : "new title"}
possible fields are:
      title
      content
      created
      user
#  ex: /ToGetThere/android/editReview/2
will return an http response of the sp which had the review

#### SEARCH & GET #####

# get all SPs in category
# ex: /ToGetThere/android/category/restaurants/

# search by string and sort by rank (no vicinity)
# ex: /ToGetThere/android/search?q=serach-text

# search by string and sort by vicinity and rank
# ex: /ToGetThere/android/lng/34.3/lat/23.3/search?q=search-text

# Get all SP's within category and sort by vicinity
# ex: /ToGetThere/android/lng/34.3/lat/23.3/category/medical/

# Search by string within category, (no vicinity)
# ex: /ToGetThere/android/[medical|restaurants|shopping|public_services|transportat|help]/search?q=string


# search results by string, category and sort by vicinity and rank
# ex: /ToGetThere/android/lng/34.3/lat/23.3/category/medical/search?q=search-text

